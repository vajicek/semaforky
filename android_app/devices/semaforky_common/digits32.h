#include <inttypes.h>
#ifdef __AVR__
#include <avr/pgmspace.h>
#elif defined (ESP8266)
#include <pgmspace.h>
#else
#define PROGMEM
#endif

#ifndef DIGITS_32_H
#define DIGITS_32_H

static const uint8_t Digits32[] PROGMEM = {
      0x42, 0x02, // total size of this array
      14, // width (may vary)
      32, // height
      48, // first char
      10, // char count
      
      // char widths
      // for each character the separate width in pixels
      14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 
      
      // font data
      // bit field of all characters
      0xF0, 0xFC, 0xFE, 0xFE, 0x1F, 0x0F, 0x0F, 0x0F, 0x0F, 0x1F, 0xFE, 0xFE, 0xFC, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x80, 0xC0, 0xF0, 0x7C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3E, 0x0F, 0x03, 0x01, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x3F, 0x7F, 0x7F, 0xF8, 0xF0, 0xF0, 0xF0, 0xF0, 0xF8, 0x7F, 0x7F, 0x3F, 0x0F, // 48
      0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, // 49
      0x70, 0xF8, 0xFC, 0x7E, 0x3F, 0x1F, 0x1F, 0x1F, 0x1F, 0x3F, 0xFF, 0xFE, 0xFE, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF8, 0xFF, 0xFF, 0xFF, 0x7F, 0xC0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFF, 0x3F, 0x1F, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x60, // 50
      0x30, 0x7C, 0x7E, 0x3E, 0x1F, 0x0F, 0x0F, 0x0F, 0x0F, 0x1F, 0xFE, 0xFE, 0xFC, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xC0, 0xC0, 0xE0, 0xFF, 0xFF, 0x7F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x07, 0xFF, 0xFF, 0xFE, 0xF8, 0x0C, 0x3E, 0x7E, 0x7C, 0xF8, 0xF0, 0xF0, 0xF0, 0xF0, 0xF8, 0x7F, 0x7F, 0x3F, 0x0F, // 51
      0x00, 0x00, 0x00, 0x00, 0x80, 0xF0, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x80, 0xF0, 0xFE, 0xFF, 0x3F, 0x07, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xE7, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x7F, 0xFF, 0xFF, 0x7F, 0x01, 0x01, // 52
      0xFE, 0xFF, 0xFF, 0xFF, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x06, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xE0, 0xC0, 0x80, 0x01, 0x03, 0x03, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x0C, 0x3E, 0x7E, 0x7C, 0xF8, 0xF0, 0xF0, 0xF0, 0xF8, 0xFC, 0x7F, 0x3F, 0x1F, 0x07, // 53
      0xE0, 0xF8, 0xFC, 0xFE, 0x1E, 0x0F, 0x0F, 0x0F, 0x0F, 0x1F, 0x3E, 0x7E, 0x7C, 0x30, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xE0, 0xC0, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x1F, 0x3F, 0x7F, 0x78, 0xF0, 0xF0, 0xF0, 0xF0, 0x78, 0x7F, 0x3F, 0x1F, 0x07, // 54
      0x06, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF8, 0xFE, 0xFF, 0x3F, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, // 55
      0xE0, 0xF8, 0xFC, 0xFE, 0x1E, 0x0F, 0x0F, 0x0F, 0x0F, 0x1E, 0xFE, 0xFC, 0xF8, 0xE0, 0x0F, 0x3F, 0x7F, 0xFF, 0xF0, 0xE0, 0xC0, 0xC0, 0xE0, 0xF0, 0xFF, 0x7F, 0x3F, 0x0F, 0xF0, 0xFC, 0xFE, 0xFF, 0x0F, 0x07, 0x03, 0x03, 0x07, 0x0F, 0xFF, 0xFE, 0xFC, 0xF0, 0x07, 0x1F, 0x3F, 0x7F, 0x78, 0xF0, 0xF0, 0xF0, 0xF0, 0x78, 0x7F, 0x3F, 0x1F, 0x07, // 56
      0xE0, 0xF8, 0xFC, 0xFE, 0x1E, 0x0F, 0x0F, 0x0F, 0x0F, 0x1E, 0xFE, 0xFC, 0xF8, 0xE0, 0x3F, 0xFF, 0xFF, 0xFF, 0xE0, 0xC0, 0x80, 0x80, 0xC0, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x01, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0x0C, 0x3E, 0x7E, 0x7C, 0xF8, 0xF0, 0xF0, 0xF0, 0xF0, 0xF8, 0x7F, 0x7F, 0x3F, 0x0F, // 57
};

#endif
